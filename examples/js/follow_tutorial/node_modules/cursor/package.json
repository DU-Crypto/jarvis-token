{
  "_args": [
    [
      "cursor@^0.1.5",
      "/home/lumensvm/follow_tutorial/node_modules/js-xdr"
    ]
  ],
  "_from": "cursor@>=0.1.5 <0.2.0",
  "_id": "cursor@0.1.5",
  "_inCache": true,
  "_installable": true,
  "_location": "/cursor",
  "_npmUser": {
    "email": "isao@dimerica-industries.com",
    "name": "jonasi"
  },
  "_npmVersion": "1.1.69",
  "_phantomChildren": {},
  "_requested": {
    "name": "cursor",
    "raw": "cursor@^0.1.5",
    "rawSpec": "^0.1.5",
    "scope": null,
    "spec": ">=0.1.5 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/js-xdr"
  ],
  "_resolved": "https://registry.npmjs.org/cursor/-/cursor-0.1.5.tgz",
  "_shasum": "ea778c2b09d33c2e564fd92147076750483ebb2c",
  "_shrinkwrap": null,
  "_spec": "cursor@^0.1.5",
  "_where": "/home/lumensvm/follow_tutorial/node_modules/js-xdr",
  "author": {
    "email": "isao@dimerica-industries.com",
    "name": "Isao Jonas"
  },
  "dependencies": {},
  "description": "Cursor implementation for node buffers",
  "devDependencies": {
    "mocha": "~1.8.1"
  },
  "directories": {},
  "dist": {
    "shasum": "ea778c2b09d33c2e564fd92147076750483ebb2c",
    "tarball": "https://registry.npmjs.org/cursor/-/cursor-0.1.5.tgz"
  },
  "keywords": [
    "buffer",
    "cursor"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonasi",
      "email": "isao@dimerica-industries.com"
    }
  ],
  "name": "cursor",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/dimerica-industries/node-cursor.png)](https://travis-ci.org/dimerica-industries/node-cursor)\n\n# Description\nWrap your buffers! Fluid API! Other things!\n\n# Usage\n```javascript\nreturn Cursor.create(2)\n\t.writeInt8(10)\n\t.writeUInt32BE(10)\n\t.buffer();\n``` \n\n##Construction\n```javascript\n//both work\nvar a = new Cursor(buffer);\nvar b = Cursor(buffer);\n\n//also accepts Buffer constructor arguments\nvar c = Cursor(10); //size\nvar d = Cursor([0x01, 0x02]); // octals\n```\n###Cloning\n```javascript\n//create a cursor pointing at the same buffer\n//and the same index\nvar pos = curs.tell();\nvar cl = curs.clone();\npos == cl.tell(); //true\n\n//create a cursor and immediately seek to a new pos\nvar pos = curs.rewind().tell();\nvar cl = curs.clone(100);\ncl.tell() == pos; //false\n```\n\n##Reading\n\nCursor implements all of the `Buffer.readXXX` methods in addition to `toString`.\n\n##Writing\n\nCursor implements all of the `Buffer.writeXXX` methods in addition to `write` and `fill`.\n\nHowever, Cursor deviates from Buffer by not offering a `copy` method. Instead, use `copyFrom`\n\n```javascript\n//bytes from c2 are copied into c1\nc1.copyFrom(c2);\n```\n\n##Extending\nSometimes it's beneficial to write have your own read/write primitives, while still providing access to the standard r/w operations.  In those cases, extending Cursor can help.\n\n```javascript\nvar ProtocolCursor = Cursor.extend(\n{\n\treadInt: function()\n\t{\n\t\treturn this.readInt32BE();\n\t},\n\t\n\twriteInt: function(n)\n\t{\n\t\treturn this.writeInt32BE(n);\n\t},\n\t\n\treadCrazyObject: function()\n\t{\n\t\tvar len = this.readInt();\n\t\tvar bytes = this.slice(len);\n\t\t\n\t\t//unpack your bytes\n\t\t...\n\t}\n});\n\nvar obj = ProtocolCursor(buffer).readCrazyObject();\n```\n\n\n# License (MIT)\n```\nCopyright (c) 2013 Dimerica Industries, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n    \nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n    \nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/dimerica-industries/node-cursor/"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "0.1.5"
}
